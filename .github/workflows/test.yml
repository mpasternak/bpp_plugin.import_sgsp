name: Test

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_INITDB_ARGS: "--locale-provider=icu --icu-locale=pl_PL.UTF-8"
          LANG: pl_PL.UTF-8
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
          
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        python-version: ['3.10',]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key:
          ${{ matrix.python-version }}-v1-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/tox.ini') }}
        restore-keys: |
          ${{ matrix.python-version }}-v1-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade poetry
        
    - name: install stuff required to build python-ldap
      run: |
          sudo apt install -y libsasl2-dev python3-dev libldap2-dev libssl-dev

    - name: Setup environment
      run: |
        poetry install

    - name: Pytest tests
      run: |
        poetry run pytest
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PASSWORD: postgres
        POSTGRES_USER: postgres
        POSTGRES_PORT: 5432
        DJANGO_BPP_DB_USER: postgres
        DJANGO_BPP_DB_PASSWORD: postgres
        DJANGO_BPP_DB_HOST: localhost
        DJANGO_BPP_DB_PORT: 5432
        
  
